// prisma/schema.prisma

generator client {
  provider      = "prisma-client-js"
  binaryTargets = ["native"]
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Business {
  id            String   @id @default(cuid())
  name          String
  industryCode  String?
  industryLabel String?
  city          String?
  state         String?
  zip           String?
  country       String?  @default("USA")
  ownerName     String?
  email         String?
  phone         String?
  linkedinUrl   String?
  website       String?
  revenueLow    Int?
  revenueHigh   Int?
  ebitdaMargin  Decimal? @db.Decimal(5, 2)
  notes         String?
  source        String?
  status        String   @default("cold")
  dedupeKey     String?  @unique
  createdAt     DateTime @default(now())
  updatedAt     DateTime @updatedAt

  matches       Match[]
}

model Buyer {
  id            String    @id @default(cuid())
  name          String
  buyerType     String?
  industryFocus String[]  @db.Text   // array of NAICS/SIC or labels
  locationFocus String[]  @db.Text   // e.g., {OR,WA,ID}
  revenueMin    Int?
  revenueMax    Int?
  ebitdaMin     Decimal?  @db.Decimal(5, 2)
  ebitdaMax     Decimal?  @db.Decimal(5, 2)
  dealType      String[]  @db.Text   // {asset,stock,majority,minority}
  contactEmail  String?
  contactPhone  String?
  linkedinUrl   String?
  notes         String?
  createdAt     DateTime  @default(now())
  updatedAt     DateTime  @updatedAt

  matches       Match[]
}

model Match {
  id         String   @id @default(cuid())
  businessId String
  buyerId    String
  matchNotes String?
  createdAt  DateTime @default(now())

  business Business @relation(fields: [businessId], references: [id], onDelete: Cascade)
  buyer    Buyer    @relation(fields: [buyerId], references: [id], onDelete: Cascade)

  @@unique([businessId, buyerId])
}
